#  ██████                           ██ ██   ██   ██      ██ ██    ██
# ░█░░░░██                         ░██░░   ░██  ░██     ░██░░    ░░
# ░█   ░██   ██████   ███████      ░██ ██ ██████░██     ░██ ██    ██  ██████
# ░██████   ░░░░░░██ ░░██░░░██  ██████░██░░░██░ ░██████████░██   ░██ ██░░░░██
# ░█░░░░ ██  ███████  ░██  ░██ ██░░░██░██  ░██  ░██░░░░░░██░██   ░██░██   ░██
# ░█    ░██ ██░░░░██  ░██  ░██░██  ░██░██  ░██  ░██     ░██░██ ██░██░██   ░██
# ░███████ ░░████████ ███  ░██░░██████░██  ░░██ ░██     ░██░██░░███ ░░██████
# ░░░░░░░   ░░░░░░░░ ░░░   ░░  ░░░░░░ ░░    ░░  ░░      ░░ ░░  ░░░   ░░░░░░
#
#    ██                                                              ████
#   ░██                                                             ░██░
#  ██████ ██████████  ██   ██ ██   ██     █████   ██████  ███████  ██████
# ░░░██░ ░░██░░██░░██░██  ░██░░██ ██     ██░░░██ ██░░░░██░░██░░░██░░░██░
#   ░██   ░██ ░██ ░██░██  ░██ ░░███     ░██  ░░ ░██   ░██ ░██  ░██  ░██
#   ░██   ░██ ░██ ░██░██  ░██  ██░██  ██░██   ██░██   ░██ ░██  ░██  ░██
#   ░░██  ███ ░██ ░██░░██████ ██ ░░██░██░░█████ ░░██████  ███  ░██  ░██
#    ░░  ░░░  ░░  ░░  ░░░░░░ ░░   ░░ ░░  ░░░░░   ░░░░░░  ░░░   ░░   ░░


# TMUX PLUGIN MANAGER
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect' # Restore tmux environment after system restart
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @resurrect-processes ':all:'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @continuum-save-interval '15'

# Tmux-resurect Key bindings
# for save session          : prefix + Ctrl-s for save session
# for restore saved session : prefix + Ctrl-r for restore session

# vi-style controls for copy mode
setw -g mode-keys vi

# Default terminal is 256 colors
set -g default-terminal "screen-256color"

# Add truecolor support
# set-option -ga terminal-overrides ",xterm-256color:Tc"

# change prefix
#set -g prefix C-Space
#unbind C-b
#bind C-Space send-prefix

# set 0 delay on escape vim
set -sg escape-time 0
set -g set-clipboard on

# mouse on for scrolling
set -g mouse on

# catching terminal window focus inside plain vim
set -g focus-events on
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# refresh nerdtree on tmux
#set-window-option -g utf8 on

# resize aggresive
set -g aggressive-resize on

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind / split-window -v
bind \ split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 5
bind > resize-pane -R 5
bind - resize-pane -D 5
bind + resize-pane -U 5

# move around next & previous buffer
bind C-p prev
bind C-n next

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

## Status bar design

# status line
set -g status-justify left
set -g status-interval 2

# Info on left (Session Name)
#set -g status-left '#[bold] session #S|CS: #{continuum_status}|'
set -g status-left ""
# The modes {
setw -g mode-attr bold
# setw -g mode-attr none

# The statusbar
set -g status-fg black
set -g status-bg white
set -g status-position bottom
set -g status-right "#[bold] #{prefix_highlight} %H:%M %d/%m/%Y"
set -g status-right-length 50
set -g status-left-length 22

setw -g window-status-current-fg white
setw -g window-status-current-bg black
setw -g window-status-current-attr bold
# setw -g window-status-current-attr none
setw -g window-status-current-format ' #I#[fg=white]:#[fg=white]#W#[fg=white]#F '

# PANEL
    set -g pane-border-status top
    set -g pane-border-style "fg=brightblack, bg=brightblack"
    set -ag pane-active-border-style "fg=brightblack, bg=brightblack, bold"
    set -g pane-border-format "#[fg=brightblack,bg=brightwhite] #P #{pane_current_command} "
    set -g pane-base-index 1
    set -g main-pane-width 1
    set -g main-pane-height 1
    set -g other-pane-width 1
    set -g other-pane-height 1

# setw -g window-status-attr none
setw -g window-status-attr bold
setw -g window-status-format ' #I#[fg=black]:#[fg=black]#W#[fg=black]#F '

setw -g window-status-bell-attr bold
#setw -g window-status-bell-attr none

# The messages
set -g message-attr bold
#set -g message-attr none

# Split
set -g pane-border-fg default
set -g pane-active-border-fg yellow
set -g pane-active-border-bg default

#-------- Copy Mode (Vim Style) {{{
#------------------------------------------------------
# This section of hotkeys mainly work in copy mode and no where else

# copying selection vim style
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
bind-key Escape copy-mode			# enter copy mode; default [
bind-key p paste-buffer				# paste; (default hotkey: ] )
bind-key P choose-buffer 			# tmux clipboard history
bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"

# Send To Tmux Clipboard or System Clipboard
bind-key < run-shell "tmux set-buffer -- \"$(xsel -o -b)\"" \; display-message "Copy To Tmux Clipboard"
bind-key > run-shell 'tmux show-buffer | xsel -i -b' \; display-message "Copy To System Clipboard"

# set the current tmux version (use this variable on if-shell commands)
run-shell "tmux set-environment -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# vim copy mode rebinds for (tmux 2.4+)
# https://shapeshed.com/custom-vim-bindings-in-tmux-2-4/
# https://github.com/tmux/tmux/issues/754#issuecomment-303156000
# https://stackoverflow.com/a/40902312
# Note: rectangle-toggle (aka Visual Block Mode) > hit v then C-v to trigger it
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  'bind-key -T copy-mode-vi v send-keys -X begin-selection; \
  bind-key -T copy-mode-vi V send-keys -X select-line; \
  bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle; \
  bind-key -T choice-mode-vi h send-keys -X tree-collapse ; \
  bind-key -T choice-mode-vi l send-keys -X tree-expand ; \
  bind-key -T choice-mode-vi H send-keys -X tree-collapse-all ; \
  bind-key -T choice-mode-vi L send-keys -X tree-expand-all ; \
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard"; \
  bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -in -selection clipboard"'

# vim copy mode rebinds for (tmux 2.3 or lower)
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  'bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy V select-line; \
  bind-key -t vi-copy C-v rectangle-toggle; \
  bind-key -t vi-choice h tree-collapse; \
  bind-key -t vi-choice l tree-expand; \
  bind-key -t vi-choice H tree-collapse-all; \
  bind-key -t vi-choice L tree-expand-all; \
  bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "xclip -in -selection clipboard"; \
  bind-key -t vi-copy y copy-pipe "xclip -in -selection clipboard"'


# google search the selected text (requires: surfraw, browser: e.g w3m)
# bind-key -T copy-mode-vi 'u' send -X copy-selection \; run-shell 'tmux show-buffer | xsel -i -b' \; new-window -n gsearch \; send-keys -t gsearch 'sr google "$(xsel -b)" && tmux kill-window' 'Enter'

# tmux 2.4 or higher
bind-key -T copy-mode-vi 'o' send-keys -X copy-selection \; new-window -n google \; send-keys -t google 'sr google "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'i' send-keys -X copy-selection \; new-window -n imagegoogle \; send-keys -t imagegoogle 'sr imagesgoogle "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'p' send-keys -X copy-selection \; new-window -n wikipedia \; send-keys -t wikipedia 'sr wikipedia "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'u' send-keys -X copy-selection \; new-window -n youtube \; send-keys -t youtube 'mpsyt /"$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'O' send-keys -X copy-selection \; new-window -n w3m \; send-keys -t w3m 'w3m "$(tmux show-buffer)" && tmux kill-window' 'Enter'

# translate, dictionary, text to speech
bind-key -T copy-mode-vi 't' send-keys -X copy-selection \; new-window -n translate \; send-keys -t translate 'translate-shell es "$(tmux show-buffer)" | w3m && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'd' send-keys -X copy-selection \; new-window -n dict \; send-keys -t dict 'translate-shell -d "$(tmux show-buffer)" | w3m && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 's' send-keys -X copy-selection \; new-window -n speak \; send-keys -t speak 'translate-shell -brief "$(tmux show-buffer)" -play && tmux kill-window' 'Enter'

# tmux 2.3 or lower
# bind-key -t vi-copy s copy-selection \; new-window -n gsearch \; send-keys -t gsearch 'sr google "$(tmux show-buffer)" && tmux kill-window' 'Enter'

# bind-key -t vi-copy o copy-selection \; new-window -n google \; send-keys -t google 'sr -browser=elinks google "$(tmux show-buffer)" && tmux kill-window' 'Enter'
# bind-key -t vi-copy i copy-selection \; new-window -n imagegoogle \; send-keys -t imagegoogle 'sr imagesgoogle "$(tmux show-buffer)" && tmux kill-window' 'Enter'
# bind-key -t vi-copy p copy-selection \; new-window -n wikipedia \; send-keys -t wikipedia 'sr wikipedia "$(tmux show-buffer)" && tmux kill-window' 'Enter'
# bind-key -t vi-copy t copy-selection \; new-window -n translate \; send-keys -t translate 'translate-shell es "$(tmux show-buffer)" | w3m && tmux kill-window' 'Enter'
# bind-key -t vi-copy d copy-selection \; new-window -n dict \; send-keys -t dict 'translate-shell -d "$(tmux show-buffer)" | w3m && tmux kill-window' 'Enter'
# bind-key -t vi-copy s copy-selection \; new-window -n speak \; send-keys -t speak 'translate-shell -brief "$(tmux show-buffer)" -play && tmux kill-window' 'Enter'




# read and write and delete paste buffer ( xsel method)
# https://wiki.archlinux.org/index.php/Tmux#ICCCM_Selection_Integration
# ctrl+shift+v

# bind-key < command-prompt -p "copy to tmux (hit enter to confirm):" "run-shell 'tmux set-buffer -- \"$(xsel -o -b)\"'"
# bind-key > command-prompt -p "copy to xsel (hit enter to confirm):" "run-shell 'tmux show-buffer | xsel -i -b'"
# bind-key < run-shell tmux set-buffer -- \"$(xsel -o -b)\" \; display-message "Copy To Tmux Clipboard"
# bind-key < run-shell "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer" \; display-message "Copied from system clipboard"


# use vim as copy mode
bind-key v capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "vim-copymode" '$SHELL -c "vim /tmp/tmux-buffer"'


# https://github.com/wincent/wincent/blob/aa3a322e3a911dabe0ef398ebb1fd7c77209b8ac/roles/dotfiles/files/.tmux.conf
# https://www.youtube.com/watch?v=N0RL_J0LT9A
# Clipper.
# bind-key y run-shell "tmux save-buffer - | nc -U ~/.clipper.sock"
#
# # "copy-pipe" requires tmux >= 1.8
# bind-key -t vi-copy Enter copy-pipe "nc -U ~/.clipper.sock"

#}}}
#-------- Mouse {{{
#------------------------------------------------------
# mouse to highlight and copy; to paste use "prefix + ]"
# http://awhan.wordpress.com/2012/04/18/tmux-copy-paste-with-mouse/

# temporarily allow regular terminal copy mode while mouse mode is enable
# visual line:  shift+mouse
# visual block: ctrl+shift+mouse <-- only works on some terminals
# visual block: ctrl+mouse <-- (while mouse mode is disable) only works on some terminals

# toggle mouse mode (tmux 2.1 or higher)
# https://www.reddit.com/r/tmux/comments/3paqoi/tmux_21_has_been_released/cw552qd
bind-key m set-option -g -q mouse on \; display-message 'Mouse: ON'
bind-key M set-option -g -q mouse off \; display-message 'Mouse: OFF'

# bind-key m \
#   set-option -g -q mouse on \;\
#   display-message 'Mouse: ON'
#
# bind-key M \
#   set-option -g -q mouse off \;\
#   display-message 'Mouse: OFF'











# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

